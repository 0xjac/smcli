name: Build and Release

on: push
#  release:
#    types: [created]

jobs:
  release:
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        include:
          - image: macos-latest
            name: macos-amd64
          - image: ubuntu-latest
            name: linux-amd64
          - image: windows-latest
            name: windows-amd64
          - image: [self-hosted, macos, arm64]
            name: macos-arm64
          - image: [self-hosted, linux, arm64]
            name: linux-arm64
    runs-on: ${{ matrix.image }}
    name: Release ${{ matrix.name }}
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: install musl
      if: contains(matrix.name, 'linux')
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: musl-tools # provides musl-gcc
        version: 1.0
    - name: build and release
      uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        binary_name: smcli
        build_command: make build
        asset_name: "smcli-${{ github.event.release.tag_name }}-${{ matrix.name }}"
        extra_files: LICENSE README.md
        # temporary
        release_tag: v1.0.1
