name: Build and Release

env:
  go-version: "1.19"

on:
  release:
    types: [created]

jobs:
  release:
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        include:
          - image: macos-latest
            name: macos-amd64
          - image: ubuntu-latest
            name: linux-amd64
          - image: windows-latest
            name: windows-amd64
            binaryextension: .exe
          - image: [self-hosted, macos, arm64]
            name: macos-arm64
          - image: [self-hosted, linux, arm64]
            name: linux-arm64
    env:
      BINARY_NAME: smcli${{ matrix.binaryextension }}
      ARTIFACT_NAME: smcli-${{ github.event.release.tag_name }}-${{ matrix.name }}.tar.gz
    runs-on: ${{ matrix.image }}
    name: Release ${{ matrix.name }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.go-version }}
    - name: Install musl
      # only run on GH-hosted runner; self-hosted runner already has the package
      if: matrix.name == 'linux-amd64'
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: musl-tools # provides musl-gcc
        version: 1.0
    - name: Build
      run: make build
    - name: Prepare files
      shell: bash
      # if: ${{ !contains(matrix.name, 'windows') }}
      run: |
        mkdir artifacts
        mv LICENSE README.md ${{ env.BINARY_NAME }} artifacts
        cd artifacts
        tar -czf ${{ env.ARTIFACT_NAME }} *
        mv ${{ env.ARTIFACT_NAME }} ..
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ env.ARTIFACT_NAME }}
